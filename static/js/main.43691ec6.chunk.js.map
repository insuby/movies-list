{"version":3,"sources":["components/Catalog/PagesNums/index.js","hooks/useFetch.js","utils/helpers.js","components/Catalog/Movie/index.js","components/Catalog/BlackList/index.js","components/Catalog/ShowCount/index.js","components/Loader/index.js","pages/Catalog/index.js","components/Modal/index.js","components/Form/Comment/index.js","routes.js","utils/constants.js","pages/Product/index.js","components/AppRouter/index.js","store/catalog.js","store/comments.js","store/loader.js","store/modal.js","Layout/index.js","index.js"],"names":["LEFT_PAGE","PagesNums","observer","catalog","useContext","Context","request","loading","useCallback","a","url","method","body","headers","Error","setLoading","JSON","stringify","fetch","response","json","data","ok","statusText","useFetch","history","useHistory","useState","pages","setPages","active","setActive","onClick","textContent","currentTarget","setPage","onRightClick","page","onLeftClick","range","from","to","i","push","calcPages","total","totalNumbers","startPage","Math","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","PAGE_NEIGHBOURS","length","extraPages","useEffect","console","log","pageLimit","movies","limit","movie_count","setList","setTotal","ceil","className","map","num","key","icon","faAngleDoubleRight","faAngleDoubleLeft","children","ucFirst","str","toUpperCase","slice","Movies","id","list","title","rating","medium_cover_image","genres","genre","href","target","rel","src","alt","faStar","setToBlackList","faEyeSlash","PRODUCT_ROUTE","faExternalLinkAlt","RemovedMovies","returnFromBlackList","blackList","index","ShowCount","name","onChange","value","setPageLimit","Loader","load","MoviesList","Modal","modal","show","FormComment","head","commentsStore","useParams","author","comment","form","setForm","event","setShow","faTimes","htmlFor","type","autoFocus","cols","rows","required","setComment","routes","path","enable","comp","Catalog","find","item","description_full","date_uploaded","large_cover_image","faComment","comments","commentID","removeComment","AppRouter","component","exact","CatalogStore","this","_list","_page","_pageLimit","_total","_blackList","makeAutoObservable","checkBlackList","runInAction","updateList","movie","localStorage","setItem","parse","getItem","filter","blackListIds","includes","CommentsStore","_comments","random","LoaderStore","_load","ModalStore","_show","Layout","Provider","createContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43691ec6.chunk.js","sourcesContent":["import './index.scss';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Context} from \"../../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {useFetch} from \"../../../hooks/useFetch\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleDoubleLeft, faAngleDoubleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {useHistory} from \"react-router-dom\";\n\nconst URL = 'https://yts.mx/api/v2/list_movies.json';\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\nconst PAGE_NEIGHBOURS = 1;\n\nconst PagesNums = observer(() => {\n    const {catalog} = useContext(Context)\n    const {request} = useFetch()\n    const history = useHistory()\n\n    const [pages, setPages] = useState([])\n    const [active, setActive] = useState(1)\n\n    const onClick = ({currentTarget: {textContent}}) => {\n        catalog.setPage(+textContent)\n        setActive(+textContent)\n    }\n\n    const onRightClick = () => {\n        catalog.setPage(catalog.page + 1)\n        setActive(catalog.page)\n    }\n\n    const onLeftClick = () => {\n        catalog.setPage(catalog.page - 1)\n        setActive(catalog.page)\n    }\n\n    const range = (from, to) => {\n        let i = from;\n\n        const range = [];\n        while (i <= to) {\n            range.push(i);\n            i += 1;\n\n        }\n        return range;\n    }\n\n    const calcPages = useCallback(() => {\n        const totalNumbers = (PAGE_NEIGHBOURS * 2) + 3;\n        const totalBlocks = totalNumbers + 2;\n\n        if (catalog.total > totalBlocks) {\n            const startPage = Math.max(2, catalog.page - PAGE_NEIGHBOURS);\n            const endPage = Math.min(catalog.total - 1, catalog.page + PAGE_NEIGHBOURS);\n            let pages = range(startPage, endPage);\n\n            const hasLeftSpill = startPage > 2;\n            const hasRightSpill = (catalog.total - endPage) > 1;\n            const spillOffset = totalNumbers - (pages.length + 1);\n\n            switch (true) {\n                case (hasLeftSpill && !hasRightSpill): {\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\n                    pages = [LEFT_PAGE, ...extraPages, ...pages];\n                    break;\n                }\n\n                case (!hasLeftSpill && hasRightSpill): {\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\n                    pages = [...pages, ...extraPages, RIGHT_PAGE];\n                    break;\n                }\n\n                case (hasLeftSpill && hasRightSpill):\n                default: {\n                    pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n                    break;\n                }\n            }\n            return [1, ...pages, catalog.total];\n        }\n        return range(1, catalog.total);\n    }, [catalog.page, catalog.total])\n\n    useEffect(() => {\n        setPages(calcPages)\n    }, [calcPages])\n\n    useEffect(() => {\n        (async () => {\n            console.log(history)\n            const {\n                data: {\n                    movies,\n                    limit,\n                    movie_count\n                }\n            } = await request({url: `${URL}?limit=${catalog.pageLimit}&page=${catalog.page}`})\n\n            catalog.setList(movies)\n            catalog.setTotal(Math.ceil(movie_count / limit))\n        })()\n    }, [catalog, catalog.page, catalog.pageLimit, request])\n\n    return (\n        <div className={'pages-nums'}>\n            {pages.map(num => {\n                switch (num) {\n                    case RIGHT_PAGE:\n                        return <button key={RIGHT_PAGE} onClick={onRightClick}>\n                            <FontAwesomeIcon icon={faAngleDoubleRight}/>\n                        </button>\n                    case LEFT_PAGE:\n                        return <button key={LEFT_PAGE} onClick={onLeftClick}>\n                            <FontAwesomeIcon icon={faAngleDoubleLeft}/>\n                        </button>\n                    default:\n                        return <button className={active === num ? 'active' : null}\n                                       key={num} onClick={onClick} children={num}/>\n                }\n            })}\n        </div>\n    );\n});\n\nexport default PagesNums;","import {useCallback, useContext} from \"react\";\nimport {Context} from \"../index\";\n\nexport const useFetch = () => {\n    const {loading} = useContext(Context)\n\n    const request = useCallback(async ({url, method = 'GET', body = null, headers = {}}) => {\n\n        if (!url) throw new Error('no url found');\n\n        loading.setLoading(true)\n\n        if (body && typeof body !== 'string') {\n            body = JSON.stringify(body)\n            headers = {\n                \"Content-Type\": \"application/json\",\n                ...headers\n            }\n        }\n\n        try {\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(response.statusText)\n            }\n\n            loading.setLoading(false)\n\n            return data\n\n        } catch (e) {\n            loading.setLoading(false)\n            throw e\n        }\n\n    }, [loading])\n\n    return {request, loading}\n}","/**\n *\n * @param str\n * @returns {string|*}\n */\nexport function ucFirst(str) {\n    if (!str) return str;\n\n    return str[0].toUpperCase() + str.slice(1);\n}","import './index.scss';\nimport React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faExternalLinkAlt, faEyeSlash, faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport {Context} from \"../../../index\";\nimport {ucFirst} from \"../../../utils/helpers\";\nimport {NavLink} from \"react-router-dom\";\nimport {PRODUCT_ROUTE} from \"../../../utils/constants\";\n\nconst Movies = observer(() => {\n    const {catalog} = useContext(Context)\n\n    return (\n        <div id={'movies'}>\n            {\n                catalog.list.map(({\n                                      id, title, rating,\n                                      medium_cover_image, url, genres\n                                  }) => {\n                    return <div key={id} className={'movie shadow-wrapper'} id={id}>\n                        {\n                            !!genres &&\n                            <div className={'movie__genres'}>\n                                {genres.map(genre => <span className={'movie__genre'} key={genre + id}>{genre}</span>)}\n                            </div>\n                        }\n                        <a className={'movie__link'} href={url}\n                           target={'_blank'} rel=\"noopener noreferrer\" children={null}/>\n                        <img className={'movie__img'} src={medium_cover_image} alt={title}/>\n                        <div>\n                            <span className={'movie__rating'}>\n                                {rating}\n                                <FontAwesomeIcon icon={faStar}/>\n                            </span>\n                            <span className={'movie__black-list'}\n                                  onClick={() => catalog.setToBlackList(id)}>\n                                <FontAwesomeIcon icon={faEyeSlash} title={'add to black list'}/>\n                            </span>\n                        </div>\n                        <p className={'movie__name strokes-count-1'} title={title}>{ucFirst(title)}</p>\n                        <div className={'movie__btn__wrapper'}>\n                            <NavLink to={PRODUCT_ROUTE + '/' + id} className={'btn movie__btn shadow-wrapper'}>\n                                <FontAwesomeIcon icon={faExternalLinkAlt}/>\n                                show more\n                            </NavLink>\n                        </div>\n                    </div>\n                })\n            }\n        </div>\n    );\n});\n\nexport default Movies;","import './index.scss'\nimport React, {useContext} from 'react';\nimport {Context} from \"../../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {ucFirst} from \"../../../utils/helpers\";\n\nconst RemovedMovies = observer(() => {\n    const {catalog} = useContext(Context)\n\n    const onClick = ({currentTarget: {id}}) => {\n        catalog.returnFromBlackList(+id)\n    }\n\n    return (\n        <div className={'black-list'}>\n            <ul className={'shadow-wrapper'}>\n                {\n                    catalog.blackList.length ?\n                        catalog.blackList.map(({title, id}, index) => {\n                            return <li key={id} id={id} onClick={onClick} title={'click to remove from the black list'}>\n                                <span>{index + 1}</span>\n                                <span>{ucFirst(title)}</span>\n                            </li>\n                        })\n                        : <li>Black list is empty</li>\n                }\n            </ul>\n        </div>\n    );\n});\n\nexport default RemovedMovies;","import './index.scss';\nimport React, {useContext} from 'react';\nimport {Context} from \"../../../index\";\n\nconst ShowCount = () => {\n    const {catalog} = useContext(Context)\n\n    const onChange = ({currentTarget: {value}}) => {\n        catalog.setPageLimit(+value)\n    }\n\n    return (\n        <div className={'show-count shadow-wrapper shadow-wrapper_reverse'}>\n            <span>Show count &nbsp;</span>\n            <select name=\"pageLimit\" id=\"pageLimit\" onChange={onChange}>\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"50\">50</option>\n            </select>\n        </div>\n    );\n};\n\nexport default ShowCount;","import './index.scss';\nimport React from 'react';\n\nconst Loader = ({load}) => {\n    return (\n        <div className={`loader__wrapper ${load ? \"visible\" : \"\"}`}>\n            <div className=\"loader__container\">\n                <div className='loader'>\n                    <div>\n                        <div>\n                            <div>\n                                <div>\n                                    <div>\n                                        <div/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import './index.scss';\nimport React, {useContext} from 'react';\nimport PagesNums from \"../../components/Catalog/PagesNums\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport Movies from \"../../components/Catalog/Movie\";\nimport BlackList from \"../../components/Catalog/BlackList\";\nimport ShowCount from \"../../components/Catalog/ShowCount\";\nimport Loader from \"../../components/Loader\";\n\nconst MoviesList = observer(() => {\n    const {loading:{load}} = useContext(Context)\n\n    return (\n        <div className={'catalog'}>\n            <Loader load={load}/>\n            <BlackList/>\n            <ShowCount/>\n            <Movies/>\n            <PagesNums/>\n        </div>\n    );\n});\n\nexport default MoviesList;","import './index.scss';\nimport React, {useContext} from 'react';\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Modal = observer(({children}) => {\n    const {modal} = useContext(Context)\n\n    return (\n        <div className={`modal ${modal.show ? 'show' : ''}`}>\n            <div className={\"modal__container\"}>\n                {children}\n            </div>\n        </div>\n    );\n});\n\nexport default Modal;","import './index.scss';\nimport React, {useContext, useState} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {Context} from \"../../../index\";\nimport {useParams} from \"react-router-dom/cjs/react-router-dom\";\n\nconst FormComment = ({head}) => {\n    const {modal, commentsStore} = useContext(Context)\n    const {id} = useParams()\n\n    const [form, setForm] = useState({\n        author: 'Noname',\n        comment: ''\n    })\n\n    const onChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const setComment = () => {\n        commentsStore.setComment({id, ...form})\n        modal.setShow(false)\n    }\n\n    return (\n        <div className={\"form-comment\"}>\n            <div className={\"form-comment__head\"}>\n                <p>{head}</p>\n                <span className={\"form-comment__close\"}\n                      onClick={() => {\n                          modal.setShow(false)\n                      }}>\n                        <FontAwesomeIcon icon={faTimes}/>\n                </span>\n            </div>\n            <div className={\"form-comment__body\"}>\n                <label htmlFor=\"author\">Your name:</label>\n                <input onChange={onChange} type=\"text\" name=\"author\" id=\"author\" value={form.author}/>\n                <label htmlFor=\"form-comment\">Your comment:</label>\n                <textarea autoFocus={true} name=\"comment\" id=\"comment\" cols=\"30\"\n                          onChange={onChange} rows=\"10\" required/>\n            </div>\n            <div className={\"form-comment__foot\"}>\n                <button className={\"btn form-comment__btn form-comment__btn_submit\"}\n                        children={\"submit\"} onClick={setComment}/>\n                <button className={\"btn form-comment__btn form-comment__btn_close\"}\n                        children={\"cancel\"}\n                        onClick={() => {\n                            modal.setShow(false)\n                        }}/>\n            </div>\n        </div>\n    );\n};\n\nexport default FormComment;","import {\n    CATALOG_ROUTE, PRODUCT_ROUTE,\n} from \"./utils/constants\";\nimport Catalog from \"./pages/Catalog\";\nimport Product from \"./pages/Product\";\n\nexport const routes = [\n    {\n        path: CATALOG_ROUTE,\n        enable: true,\n        comp: Catalog,\n        name: 'catalog',\n        className: ''\n    },\n    {\n        path: PRODUCT_ROUTE + '/:id',\n        enable: false,\n        comp: Product,\n        name: 'product',\n        className: ''\n    },\n]\n\n","export const CATALOG_ROUTE = '/'\nexport const PRODUCT_ROUTE = '/products'\n\n","import './index.scss';\nimport React, {useContext} from 'react';\nimport {useParams} from \"react-router-dom/cjs/react-router-dom\";\nimport {Context} from \"../../index\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faComment, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../components/Modal\";\nimport FormComment from \"../../components/Form/Comment\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Product = observer(() => {\n    const {catalog, commentsStore, modal} = useContext(Context)\n    const {id} = useParams()\n    const {\n        title, description_full, date_uploaded,\n        large_cover_image, genres\n    } = catalog.list.find(item => item.id === +id)\n\n    return (\n        <div className=\"product\">\n            <div className=\"product__image\">\n                <img src={large_cover_image} alt={title}/>\n            </div>\n            <div className=\"product__info\">\n                <h1 className={'product__info__name'}>{title}</h1>\n                <p className={'product__info__genre'}>{genres && genres.map(genre => <span\n                    key={genre}>{genre}</span>)}</p>\n                <button className={\"product__info__btn\"} onClick={() => {\n                    modal.setShow(true)\n                }}>\n                    <FontAwesomeIcon icon={faComment}/>\n                    leave comment\n                </button>\n                <p className={'product__info__uploaded'}>Uploaded: {date_uploaded}</p>\n                <p className={'product__info__desc'}>{description_full}</p>\n            </div>\n            <div className={\"product__comments\"}>\n                <h3>Comments</h3>\n                {\n                    commentsStore.comments[id] ?\n                        <ul>\n                            {\n                                commentsStore.comments[id].map(({author, comment, commentID}) => {\n                                    return <li key={commentID}>\n                                            <span className={\"product__comments__close\"}\n                                                  onClick={(event) => {\n                                                      commentsStore.removeComment(+id, commentID)\n                                                  }}>\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </span>\n                                        <span className={\"product__comments__text\"} children={comment}/>\n                                        <span className={\"product__comments__author\"} children={author}/>\n                                    </li>\n                                })\n                            }\n                        </ul> : <p>No comment yet</p>\n                }\n            </div>\n            <Modal>\n                <FormComment head={title}/>\n            </Modal>\n        </div>\n    );\n});\n\nexport default Product;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {routes} from \"../../routes\";\nimport {CATALOG_ROUTE} from \"../../utils/constants\";\n\nconst AppRouter = () => {\n    return (\n        <Switch>\n            {routes.map(({path, comp}, index) =>\n                <Route key={index} path={path} component={comp} exact/>\n            )}\n            <Redirect to={CATALOG_ROUTE}/>\n        </Switch>\n    );\n};\n\nexport default AppRouter;","import {makeAutoObservable, runInAction} from \"mobx\";\n\nexport default class CatalogStore {\n    constructor() {\n        this._list = []\n        this._page = 1\n        this._pageLimit = 5\n        this._total = null\n        this._blackList = []\n\n        makeAutoObservable(this)\n    }\n\n    setList(list) {\n        this.checkBlackList()\n\n        runInAction(() => {\n            this._list = this.updateList(list)\n        })\n    }\n\n    setPage(page) {\n        runInAction(() => {\n            this._page = page\n        })\n    }\n\n    setPageLimit(pageLimit) {\n        runInAction(() => {\n            this._pageLimit = pageLimit\n        })\n    }\n\n    setTotal(total) {\n        runInAction(() => {\n            this._total = total\n        })\n    }\n\n    setToBlackList(id) {\n        const movie = this._list.find(movie => movie.id === id)\n\n        this._blackList.push(movie)\n\n        localStorage.setItem('blackList', JSON.stringify(this._blackList))\n\n        this.setList(this._list)\n    }\n\n    returnFromBlackList(id) {\n        let blackList = JSON.parse(localStorage.getItem('blackList'))\n        const movie = blackList.filter(item => item.id === id)[0]\n\n        this._blackList = blackList.filter(item => item.id !== id)\n        this._list.push(movie)\n\n        localStorage.setItem('blackList', JSON.stringify(this._blackList))\n    }\n\n    checkBlackList() {\n        const blackList = JSON.parse(localStorage.getItem('blackList')) || [];\n\n        runInAction(() => {\n            this._blackList = blackList\n        })\n    }\n\n    updateList(list) {\n        const blackListIds = this.blackList.map(({id}) => id)\n        return list.filter(item => !blackListIds.includes(item.id))\n    }\n\n    get list() {\n        return this._list\n    }\n\n    get removed() {\n        return this._blackList\n    }\n\n    get page() {\n        return this._page\n    }\n\n    get pageLimit() {\n        return this._pageLimit\n    }\n\n    get total() {\n        return this._total\n    }\n\n    get blackList() {\n        return this._blackList\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class CommentsStore {\n    constructor() {\n        this._comments = JSON.parse(localStorage.getItem('comments')) || {}\n\n        makeAutoObservable(this)\n    }\n\n    setComment({id, comment, author}) {\n        if (!comment.length) return;\n        if (!this._comments[id]) this._comments[id] = []\n        this._comments[id].push({author, comment, commentID: Math.ceil(Math.random() * 10000)})\n        localStorage.setItem('comments', JSON.stringify(this._comments))\n    }\n\n    removeComment(id, commentID) {\n        this._comments[id] = this._comments[id].filter(comment => comment.commentID !== commentID)\n        localStorage.setItem('comments', JSON.stringify(this._comments))\n    }\n\n    get comments() {\n        return this._comments\n    }\n\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class LoaderStore {\n    constructor() {\n        this._load = false\n\n        makeAutoObservable(this)\n    }\n\n    setLoading(load) {\n        this._load = load\n    }\n\n    get load() {\n        return this._load\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class ModalStore {\n    constructor() {\n        this._show = false\n\n        makeAutoObservable(this)\n    }\n\n    setShow(show) {\n        this._show = show\n    }\n\n    get show() {\n        return this._show\n    }\n}","import './index.scss';\nimport React from 'react';\nimport {Context} from \"../index\";\nimport AppRouter from \"../components/AppRouter\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport CatalogStore from \"../store/catalog\";\nimport CommentsStore from \"../store/comments\";\nimport LoaderStore from \"../store/loader\";\nimport ModalStore from \"../store/modal\";\n\nconst Layout = () => {\n    return (\n        <Context.Provider value={{\n            catalog: new CatalogStore(),\n            commentsStore: new CommentsStore(),\n            loading: new LoaderStore(),\n            modal: new ModalStore(),\n        }}>\n            <BrowserRouter>\n                <header>\n                    <nav/>\n                </header>\n                <main>\n                    <div className=\"container\">\n                        <AppRouter/>\n                    </div>\n                </main>\n                <footer/>\n            </BrowserRouter>\n        </Context.Provider>\n    );\n};\n\nexport default Layout;","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from \"./Layout\";\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Layout/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}